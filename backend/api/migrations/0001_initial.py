# Generated by Django 2.1.2 on 2018-12-20 17:50

import api.utility
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DuoPartner',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('player_a_feedback', models.TextField(blank=True, default=None, max_length=500, null=True)),
                ('player_b_feedback', models.TextField(blank=True, default=None, max_length=500, null=True)),
                ('player_a_rating', models.IntegerField(default=None, null=True)),
                ('player_b_rating', models.IntegerField(default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Endorsement',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('skill', models.CharField(blank=True, max_length=20, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Endorsements',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LaddrMatch',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('player_a_accept', models.BooleanField(default=False)),
                ('player_b_accept', models.BooleanField(default=False)),
                ('primary_reason', models.TextField(blank=True, default=None, max_length=200, null=True)),
                ('secondary_reason', models.TextField(blank=True, default=None, max_length=200, null=True)),
                ('tertiary_reason', models.TextField(blank=True, default=None, max_length=200, null=True)),
                ('player_a_accept_at', models.DateTimeField(auto_now=True)),
                ('player_a_rejected_at', models.DateTimeField(blank=True, null=True)),
                ('player_a_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('player_b_accept_at', models.DateTimeField(auto_now=True)),
                ('player_b_rejected_at', models.DateTimeField(blank=True, null=True)),
                ('player_b_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('expired', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(default=api.utility.default_match_expire)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MatchingPreference',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rank', models.IntegerField(blank=True, choices=[(0, 'Bronze V'), (1, 'Bronze IV'), (2, 'Bronze III'), (3, 'Bronze II'), (4, 'Bronze I'), (5, 'Silver V'), (6, 'Silver IV'), (7, 'Silver III'), (8, 'Silver II'), (9, 'Silver I'), (10, 'Gold V'), (11, 'Gold IV'), (12, 'Gold III'), (13, 'Gold II'), (14, 'Gold I'), (15, 'Platinum V'), (16, 'Platinum IV '), (17, 'Platinum III'), (18, 'Platinum II'), (19, 'Platinum I'), (20, 'Diamond V'), (21, 'Diamond IV'), (22, 'Diamond III'), (23, 'Diamond II'), (24, 'Diamond I'), (25, 'Challenger')], null=True)),
                ('rank_importance', models.IntegerField(default=0)),
                ('role', models.CharField(blank=True, choices=[('Bottom', 'Bottom'), ('Support', 'Support'), ('Jungle', 'Jungle'), ('Mid', 'Mid'), ('Top', 'Top')], max_length=15, null=True)),
                ('role_importance', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('summoner_name', models.CharField(blank=True, max_length=50, null=True)),
                ('playstyle', models.CharField(choices=[('Aggressive', 'Aggressive'), ('Conservative', 'Conservative'), ('Supporting', 'Supporting')], default='Conservative', max_length=40)),
                ('goal', models.TextField(blank=True, max_length=200)),
                ('favorite_color', models.CharField(blank=True, max_length=15, null=True)),
                ('role', models.CharField(blank=True, choices=[('Bottom', 'Bottom'), ('Support', 'Support'), ('Jungle', 'Jungle'), ('Mid', 'Mid'), ('Top', 'Top')], max_length=15, null=True)),
                ('rank', models.IntegerField(blank=True, choices=[(0, 'Bronze V'), (1, 'Bronze IV'), (2, 'Bronze III'), (3, 'Bronze II'), (4, 'Bronze I'), (5, 'Silver V'), (6, 'Silver IV'), (7, 'Silver III'), (8, 'Silver II'), (9, 'Silver I'), (10, 'Gold V'), (11, 'Gold IV'), (12, 'Gold III'), (13, 'Gold II'), (14, 'Gold I'), (15, 'Platinum V'), (16, 'Platinum IV '), (17, 'Platinum III'), (18, 'Platinum II'), (19, 'Platinum I'), (20, 'Diamond V'), (21, 'Diamond IV'), (22, 'Diamond III'), (23, 'Diamond II'), (24, 'Diamond I'), (25, 'Challenger')], null=True)),
                ('is_real', models.BooleanField(default=True)),
                ('endorsements', models.ManyToManyField(through='api.Endorsements', to='api.Endorsement')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserMatch',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, verbose_name='Message')),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_requests_sent', to='api.Profile')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_requests_received', to='api.Profile')),
            ],
            options={
                'verbose_name': 'User Match Request',
                'verbose_name_plural': 'User Match Requests',
            },
        ),
        migrations.AddField(
            model_name='matchingpreference',
            name='player',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Profile'),
        ),
        migrations.AddField(
            model_name='laddrmatch',
            name='player_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laddrmatch_player_a', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='laddrmatch',
            name='player_b',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laddrmatch_player_b', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='endorsements',
            name='endorsee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endorsee', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='endorsements',
            name='endorsement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Endorsement'),
        ),
        migrations.AddField(
            model_name='endorsements',
            name='endorser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endorser', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='duopartner',
            name='player_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='duopartner_player_a', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='duopartner',
            name='player_b',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='duopartner_player_b', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='duopartner',
            name='suggested_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='usermatch',
            unique_together={('from_user', 'to_user')},
        ),
        migrations.AlterUniqueTogether(
            name='endorsements',
            unique_together={('endorser', 'endorsee', 'endorsement')},
        ),
    ]
