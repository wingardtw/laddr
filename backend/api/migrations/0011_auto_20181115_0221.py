# Generated by Django 2.1.2 on 2018-11-15 02:21

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0010_auto_20181111_2309'),
    ]

    operations = [
        migrations.CreateModel(
            name='LaddrMatch',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('player_a_accept', models.BooleanField(default=False)),
                ('player_b_accept', models.BooleanField(default=False)),
                ('primary_reason', models.TextField(blank=True, default=None, max_length=200, null=True)),
                ('secondary_reason', models.TextField(blank=True, default=None, max_length=200, null=True)),
                ('tertiary_reason', models.TextField(blank=True, default=None, max_length=200, null=True)),
                ('player_a_accept_at', models.DateTimeField(auto_now=True)),
                ('player_a_rejected_at', models.DateTimeField(blank=True, null=True)),
                ('player_a_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('player_b_accept_at', models.DateTimeField(auto_now=True)),
                ('player_b_rejected_at', models.DateTimeField(blank=True, null=True)),
                ('player_b_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('expired', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(default=datetime.datetime(2018, 12, 9, 2, 21, 41, 881663, tzinfo=utc))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserMatch',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, verbose_name='Message')),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('expired', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(default=datetime.datetime(2018, 12, 9, 2, 21, 41, 881663, tzinfo=utc))),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_requests_sent', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_requests_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Match Request',
                'verbose_name_plural': 'User Match Requests',
            },
        ),
        migrations.RemoveField(
            model_name='match',
            name='player_a',
        ),
        migrations.RemoveField(
            model_name='match',
            name='player_b',
        ),
        migrations.RemoveField(
            model_name='duopartner',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='lol_server',
        ),
        migrations.AddField(
            model_name='duopartner',
            name='suggested_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='profile',
            name='server',
            field=models.CharField(blank=True, choices=[('NA', 'North America')], default='NA', max_length=10),
        ),
        migrations.AlterField(
            model_name='duopartner',
            name='player_a_feedback',
            field=models.TextField(blank=True, default=None, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='duopartner',
            name='player_b_feedback',
            field=models.TextField(blank=True, default=None, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='endorsement',
            name='skill',
            field=models.CharField(blank=True, max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='favorite_color',
            field=models.CharField(blank=True, max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='rank',
            field=models.CharField(blank=True, choices=[('Bronze V', 'Bronze V'), ('Bronze IV', 'Bronze IV'), ('Bronze III', 'Bronze III'), ('Bronze II', 'Bronze II'), ('Bronze I', 'Bronze I'), ('Silver V', 'Silver V'), ('Silver IV', 'Silver IV'), ('Silver III', 'Silver III'), ('Silver II', 'Silver II'), ('Silver I', 'Silver I'), ('Gold V', 'Gold V'), ('Gold IV', 'Gold IV'), ('Gold III', 'Gold III'), ('Gold II', 'Gold II'), ('Gold I', 'Gold I'), ('Platinum V', 'Platinum V'), ('Platinum IV', 'Platinum IV '), ('Platinum III', 'Platinum III'), ('Platinum II', 'Platinum II'), ('Platinum I', 'Platinum I'), ('Diamond V', 'Diamond V'), ('Diamond IV', 'Diamond IV'), ('Diamond III', 'Diamond III'), ('Diamond II', 'Diamond II'), ('Diamond I', 'Diamond I'), ('Challenger', 'Challenger')], max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='role',
            field=models.CharField(blank=True, choices=[('Bottom', 'Bottom'), ('Support', 'Support'), ('Jungle', 'Jungle'), ('Mid', 'Mid'), ('Top', 'Top')], max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='summoner_name',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.DeleteModel(
            name='Match',
        ),
        migrations.AddField(
            model_name='laddrmatch',
            name='player_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_laddrmatch_player_a', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='laddrmatch',
            name='player_b',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_laddrmatch_player_b', to='api.Profile'),
        ),
        migrations.AlterUniqueTogether(
            name='usermatch',
            unique_together={('from_user', 'to_user')},
        ),
    ]
